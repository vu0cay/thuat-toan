//https://oj.vnoi.info/problem/qmax2
#include <bits/stdc++.h>



#define el cout<<"\n"
#define nmax 50005

using namespace std;

int st[nmax*4],lazy[nmax*4];


void push(int id)
{
	if(lazy[id])
	{
		st[id*2] += lazy[id];
		st[id*2+1] += lazy[id];
		lazy[id*2] += lazy[id];
		lazy[id*2+1] += lazy[id];
		
		lazy[id] = 0;
	}
}


int get(int id,int l,int r,int u,int v)
{
	if(v<l || u > r) return -1e5;
	
	if(u<=l && r<=v)
	{
		return st[id];
	}
	int mid = l - (l-r)/2;
	push(id);
	
	return max(get(id*2,l,mid,u,v),get(id*2+1,mid+1,r,u,v));
}

void update(int id,int l, int r,int u,int v,int x)
{
	if(v<l || u>r) return;
	
	if(u<=l && r<=v)
	{
		st[id] += x;
		lazy[id] +=x;
		return;
	}
	
	int mid = l - (l-r)/2;
	push(id);
	
	
	update(id*2,l,mid,u,v,x);
	update(id*2+1,mid+1,r,u,v,x);
	
	st[id] = max(st[id*2],st[id*2+1]);
}

int main()
{
	int n ,q; cin>>n>>q;
	
	
	for(int i = 0; i<n; i++) {
		update(1,0,n-1,i,i,0);
	}

	while(q--)
	{
		int op,l,r,x;
		cin>>op>>l>>r;
		if(op == 0)
		{
			cin>>x;
			update(1,0,n-1,l-1,r-1,x);
		}
		else {
			cout<<get(1,0,n-1,l-1,r-1);
			el;
		}
		
	}
	
}
